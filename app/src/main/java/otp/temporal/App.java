/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package otp.temporal;

import com.uber.m3.util.Duration;

import io.temporal.client.WorkflowClient;
import io.temporal.client.WorkflowOptions;
import io.temporal.serviceclient.WorkflowServiceStubs;
import io.temporal.worker.Worker;
import io.temporal.worker.WorkerFactory;
import otp.temporal.OtpWorkflow.ValidationResult;

import java.util.Vector;
import java.util.HashSet;
import java.time.Instant;

public class App {
    public String getGreeting() {
        return "Hello World!";
    }


    public static void main(String[] args) throws InterruptedException {
        WorkflowServiceStubs service = WorkflowServiceStubs.newLocalServiceStubs();
        WorkflowClient client = WorkflowClient.newInstance(service);
        WorkerFactory factory = WorkerFactory.newInstance(client);
        Worker worker = factory.newWorker("default");
        worker.registerWorkflowImplementationTypes(OtpWorkflowImpl.class);
        worker.registerActivitiesImplementations(new OtpActivitiesImpl());
        factory.start();



        WorkflowOptions options = WorkflowOptions.newBuilder()
            // .setWorkflowId(WORKFLOW_ID)
            .setTaskQueue("default")
            .build();

        OtpWorkflow workflow = client.newWorkflowStub(OtpWorkflow.class, options);

        WorkflowClient.start(workflow::initiateOtpLogin, "+919876543210");
        System.out.println("Resend OTP result " + workflow.resendOtp());

        // bruteforce: for(int i=0; i<1000000; i++) {
        //     String otp = String.format("%06d", i);
        //     ValidationResult r = workflow.validateOtp(otp);
        //     switch(r) {
        //         case INVALID:
        //             // do nothing
        //             break;
        //         case EXPIRED: 
        //             // do nothing
        //             break;
        //         case VALID:
        //             System.out.println("OTP brute-forced: " + otp);
        //             break bruteforce;
        //     }
        // }


        // for(int i=0; i<1000000; i++) {
        //     Thread.new(() -> {

        //     }).start();
        //     String otp = String.format("%06d", i);
        //     ValidationResult r = workflow.validateOtp(otp);
        //     switch(r) {
        //         case INVALID:
        //             // do nothing
        //             break;
        //         case EXPIRED: 
        //             // do nothing
        //             break;
        //         case VALID:
        //             System.out.println("OTP brute-forced: " + otp);
        //             break bruteforce;
        //     }
        // }
        // workflow.initiateOtpLogin("+919876543210");
        // Thread.sleep(5000);

        // Vector<Pair<Boolean, Instant>> v = new Vector<>(1000);
        // for(int i=0; i<1000; i++) {
        //     new Thread(() -> { v.add(workflow.resendOtp()); }).start();
        // }

        // Thread.sleep(10000);

        // HashSet<Pair<Boolean, Instant>> s = new HashSet<>();
        // s.addAll(v);
        // System.out.println("unique values = " + s.toString());
        

        // System.out.println("the generated otp is " + workflow.initiateOtpLogin("+91 98765 43210"));

        System.exit(0);
    }
}
